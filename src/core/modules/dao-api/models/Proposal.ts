/**
 * DAO-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { UserBasic1 } from '../models/UserBasic1';
import { HttpFile } from '../http/http';

export class Proposal {
    'proposalId'?: string;
    'name': string;
    'description': string;
    'daoId': string;
    'podId'?: string | null;
    'createdBy': string;
    'startTime': Date;
    'endTime': Date;
    'actions'?: { [key: string]: any; } | null;
    'forVotesCount'?: number;
    'againstVotesCount'?: number;
    'forVoters'?: Array<UserBasic1>;
    'againstVoters'?: Array<UserBasic1>;
    'isActive'?: any | null;
    'hasPassed'?: any | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "proposalId",
            "baseName": "proposal_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "daoId",
            "baseName": "dao_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "podId",
            "baseName": "pod_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdBy",
            "baseName": "created_by",
            "type": "string",
            "format": ""
        },
        {
            "name": "startTime",
            "baseName": "start_time",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "endTime",
            "baseName": "end_time",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "actions",
            "baseName": "actions",
            "type": "{ [key: string]: any; }",
            "format": ""
        },
        {
            "name": "forVotesCount",
            "baseName": "for_votes_count",
            "type": "number",
            "format": ""
        },
        {
            "name": "againstVotesCount",
            "baseName": "against_votes_count",
            "type": "number",
            "format": ""
        },
        {
            "name": "forVoters",
            "baseName": "for_voters",
            "type": "Array<UserBasic1>",
            "format": ""
        },
        {
            "name": "againstVoters",
            "baseName": "against_voters",
            "type": "Array<UserBasic1>",
            "format": ""
        },
        {
            "name": "isActive",
            "baseName": "is_active",
            "type": "any",
            "format": ""
        },
        {
            "name": "hasPassed",
            "baseName": "has_passed",
            "type": "any",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Proposal.attributeTypeMap;
    }

    public constructor() {
    }
}
