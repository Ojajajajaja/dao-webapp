{
  "version": 3,
  "sources": ["../../node_modules/borsh/lib/esm/types.js", "../../node_modules/borsh/lib/esm/buffer.js", "../../node_modules/borsh/lib/esm/utils.js", "../../node_modules/borsh/lib/esm/serialize.js", "../../node_modules/borsh/lib/esm/deserialize.js", "../../node_modules/borsh/lib/esm/index.js"],
  "sourcesContent": ["export var integers = ['u8', 'u16', 'u32', 'u64', 'u128', 'i8', 'i16', 'i32', 'i64', 'i128', 'f32', 'f64'];\n", "var EncodeBuffer = /** @class */ (function () {\n    function EncodeBuffer() {\n        this.offset = 0;\n        this.buffer_size = 256;\n        this.buffer = new ArrayBuffer(this.buffer_size);\n        this.view = new DataView(this.buffer);\n    }\n    EncodeBuffer.prototype.resize_if_necessary = function (needed_space) {\n        if (this.buffer_size - this.offset < needed_space) {\n            this.buffer_size = Math.max(this.buffer_size * 2, this.buffer_size + needed_space);\n            var new_buffer = new ArrayBuffer(this.buffer_size);\n            new Uint8Array(new_buffer).set(new Uint8Array(this.buffer));\n            this.buffer = new_buffer;\n            this.view = new DataView(new_buffer);\n        }\n    };\n    EncodeBuffer.prototype.get_used_buffer = function () {\n        return new Uint8Array(this.buffer).slice(0, this.offset);\n    };\n    EncodeBuffer.prototype.store_value = function (value, type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.resize_if_necessary(size);\n        var toCall = type[0] === 'f' ? \"setFloat\".concat(bSize) : type[0] === 'i' ? \"setInt\".concat(bSize) : \"setUint\".concat(bSize);\n        this.view[toCall](this.offset, value, true);\n        this.offset += size;\n    };\n    EncodeBuffer.prototype.store_bytes = function (from) {\n        this.resize_if_necessary(from.length);\n        new Uint8Array(this.buffer).set(new Uint8Array(from), this.offset);\n        this.offset += from.length;\n    };\n    return EncodeBuffer;\n}());\nexport { EncodeBuffer };\nvar DecodeBuffer = /** @class */ (function () {\n    function DecodeBuffer(buf) {\n        this.offset = 0;\n        this.buffer_size = buf.length;\n        this.buffer = new ArrayBuffer(buf.length);\n        new Uint8Array(this.buffer).set(buf);\n        this.view = new DataView(this.buffer);\n    }\n    DecodeBuffer.prototype.assert_enough_buffer = function (size) {\n        if (this.offset + size > this.buffer.byteLength) {\n            throw new Error('Error in schema, the buffer is smaller than expected');\n        }\n    };\n    DecodeBuffer.prototype.consume_value = function (type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.assert_enough_buffer(size);\n        var toCall = type[0] === 'f' ? \"getFloat\".concat(bSize) : type[0] === 'i' ? \"getInt\".concat(bSize) : \"getUint\".concat(bSize);\n        var ret = this.view[toCall](this.offset, true);\n        this.offset += size;\n        return ret;\n    };\n    DecodeBuffer.prototype.consume_bytes = function (size) {\n        this.assert_enough_buffer(size);\n        var ret = this.buffer.slice(this.offset, this.offset + size);\n        this.offset += size;\n        return ret;\n    };\n    return DecodeBuffer;\n}());\nexport { DecodeBuffer };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { integers } from './types.js';\nexport function isArrayLike(value) {\n    // source: https://stackoverflow.com/questions/24048547/checking-if-an-object-is-array-like\n    return (Array.isArray(value) ||\n        (!!value &&\n            typeof value === 'object' &&\n            'length' in value &&\n            typeof (value.length) === 'number' &&\n            (value.length === 0 ||\n                (value.length > 0 &&\n                    (value.length - 1) in value))));\n}\nexport function expect_type(value, type, fieldPath) {\n    if (typeof (value) !== type) {\n        throw new Error(\"Expected \".concat(type, \" not \").concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexport function expect_bigint(value, fieldPath) {\n    var basicType = ['number', 'string', 'bigint', 'boolean'].includes(typeof (value));\n    var strObject = typeof (value) === 'object' && value !== null && 'toString' in value;\n    if (!basicType && !strObject) {\n        throw new Error(\"Expected bigint, number, boolean or string not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexport function expect_same_size(length, expected, fieldPath) {\n    if (length !== expected) {\n        throw new Error(\"Array length \".concat(length, \" does not match schema length \").concat(expected, \" at \").concat(fieldPath.join('.')));\n    }\n}\nexport function expect_enum(value, fieldPath) {\n    if (typeof (value) !== 'object' || value === null) {\n        throw new Error(\"Expected object not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\n// Validate Schema\nvar VALID_STRING_TYPES = integers.concat(['bool', 'string']);\nvar VALID_OBJECT_KEYS = ['option', 'enum', 'array', 'set', 'map', 'struct'];\nvar ErrorSchema = /** @class */ (function (_super) {\n    __extends(ErrorSchema, _super);\n    function ErrorSchema(schema, expected) {\n        var message = \"Invalid schema: \".concat(JSON.stringify(schema), \" expected \").concat(expected);\n        return _super.call(this, message) || this;\n    }\n    return ErrorSchema;\n}(Error));\nexport { ErrorSchema };\nexport function validate_schema(schema) {\n    if (typeof (schema) === 'string' && VALID_STRING_TYPES.includes(schema)) {\n        return;\n    }\n    if (schema && typeof (schema) === 'object') {\n        var keys = Object.keys(schema);\n        if (keys.length === 1 && VALID_OBJECT_KEYS.includes(keys[0])) {\n            var key = keys[0];\n            if (key === 'option')\n                return validate_schema(schema[key]);\n            if (key === 'enum')\n                return validate_enum_schema(schema[key]);\n            if (key === 'array')\n                return validate_array_schema(schema[key]);\n            if (key === 'set')\n                return validate_schema(schema[key]);\n            if (key === 'map')\n                return validate_map_schema(schema[key]);\n            if (key === 'struct')\n                return validate_struct_schema(schema[key]);\n        }\n    }\n    throw new ErrorSchema(schema, VALID_OBJECT_KEYS.join(', ') + ' or ' + VALID_STRING_TYPES.join(', '));\n}\nfunction validate_enum_schema(schema) {\n    if (!Array.isArray(schema))\n        throw new ErrorSchema(schema, 'Array');\n    for (var _i = 0, schema_1 = schema; _i < schema_1.length; _i++) {\n        var sch = schema_1[_i];\n        if (typeof sch !== 'object' || !('struct' in sch)) {\n            throw new Error('Missing \"struct\" key in enum schema');\n        }\n        if (typeof sch.struct !== 'object' || Object.keys(sch.struct).length !== 1) {\n            throw new Error('The \"struct\" in each enum must have a single key');\n        }\n        validate_schema({ struct: sch.struct });\n    }\n}\nfunction validate_array_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, '{ type, len? }');\n    if (schema.len && typeof schema.len !== 'number') {\n        throw new Error(\"Invalid schema: \".concat(schema));\n    }\n    if ('type' in schema)\n        return validate_schema(schema.type);\n    throw new ErrorSchema(schema, '{ type, len? }');\n}\nfunction validate_map_schema(schema) {\n    if (typeof schema === 'object' && 'key' in schema && 'value' in schema) {\n        validate_schema(schema.key);\n        validate_schema(schema.value);\n    }\n    else {\n        throw new ErrorSchema(schema, '{ key, value }');\n    }\n}\nfunction validate_struct_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, 'object');\n    for (var key in schema) {\n        validate_schema(schema[key]);\n    }\n}\n", "import { integers } from './types.js';\nimport { EncodeBuffer } from './buffer.js';\nimport * as utils from './utils.js';\nvar BorshSerializer = /** @class */ (function () {\n    function BorshSerializer(checkTypes) {\n        this.encoded = new EncodeBuffer();\n        this.fieldPath = ['value'];\n        this.checkTypes = checkTypes;\n    }\n    BorshSerializer.prototype.encode = function (value, schema) {\n        this.encode_value(value, schema);\n        return this.encoded.get_used_buffer();\n    };\n    BorshSerializer.prototype.encode_value = function (value, schema) {\n        if (typeof schema === 'string') {\n            if (integers.includes(schema))\n                return this.encode_integer(value, schema);\n            if (schema === 'string')\n                return this.encode_string(value);\n            if (schema === 'bool')\n                return this.encode_boolean(value);\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.encode_option(value, schema);\n            if ('enum' in schema)\n                return this.encode_enum(value, schema);\n            if ('array' in schema)\n                return this.encode_array(value, schema);\n            if ('set' in schema)\n                return this.encode_set(value, schema);\n            if ('map' in schema)\n                return this.encode_map(value, schema);\n            if ('struct' in schema)\n                return this.encode_struct(value, schema);\n        }\n    };\n    BorshSerializer.prototype.encode_integer = function (value, schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            this.checkTypes && utils.expect_type(value, 'number', this.fieldPath);\n            this.encoded.store_value(value, schema);\n        }\n        else {\n            this.checkTypes && utils.expect_bigint(value, this.fieldPath);\n            this.encode_bigint(BigInt(value), size);\n        }\n    };\n    BorshSerializer.prototype.encode_bigint = function (value, size) {\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(buffer_len);\n        for (var i = 0; i < buffer_len; i++) {\n            buffer[i] = Number(value & BigInt(0xff));\n            value = value >> BigInt(8);\n        }\n        this.encoded.store_bytes(new Uint8Array(buffer));\n    };\n    BorshSerializer.prototype.encode_string = function (value) {\n        this.checkTypes && utils.expect_type(value, 'string', this.fieldPath);\n        var _value = value;\n        // encode to utf8 bytes without using TextEncoder\n        var utf8Bytes = [];\n        for (var i = 0; i < _value.length; i++) {\n            var charCode = _value.charCodeAt(i);\n            if (charCode < 0x80) {\n                utf8Bytes.push(charCode);\n            }\n            else if (charCode < 0x800) {\n                utf8Bytes.push(0xc0 | (charCode >> 6), 0x80 | (charCode & 0x3f));\n            }\n            else if (charCode < 0xd800 || charCode >= 0xe000) {\n                utf8Bytes.push(0xe0 | (charCode >> 12), 0x80 | ((charCode >> 6) & 0x3f), 0x80 | (charCode & 0x3f));\n            }\n            else {\n                i++;\n                charCode = 0x10000 + (((charCode & 0x3ff) << 10) | (_value.charCodeAt(i) & 0x3ff));\n                utf8Bytes.push(0xf0 | (charCode >> 18), 0x80 | ((charCode >> 12) & 0x3f), 0x80 | ((charCode >> 6) & 0x3f), 0x80 | (charCode & 0x3f));\n            }\n        }\n        // 4 bytes for length + string bytes\n        this.encoded.store_value(utf8Bytes.length, 'u32');\n        this.encoded.store_bytes(new Uint8Array(utf8Bytes));\n    };\n    BorshSerializer.prototype.encode_boolean = function (value) {\n        this.checkTypes && utils.expect_type(value, 'boolean', this.fieldPath);\n        this.encoded.store_value(value ? 1 : 0, 'u8');\n    };\n    BorshSerializer.prototype.encode_option = function (value, schema) {\n        if (value === null || value === undefined) {\n            this.encoded.store_value(0, 'u8');\n        }\n        else {\n            this.encoded.store_value(1, 'u8');\n            this.encode_value(value, schema.option);\n        }\n    };\n    BorshSerializer.prototype.encode_enum = function (value, schema) {\n        this.checkTypes && utils.expect_enum(value, this.fieldPath);\n        var valueKey = Object.keys(value)[0];\n        for (var i = 0; i < schema[\"enum\"].length; i++) {\n            var valueSchema = schema[\"enum\"][i];\n            if (valueKey === Object.keys(valueSchema.struct)[0]) {\n                this.encoded.store_value(i, 'u8');\n                return this.encode_struct(value, valueSchema);\n            }\n        }\n        throw new Error(\"Enum key (\".concat(valueKey, \") not found in enum schema: \").concat(JSON.stringify(schema), \" at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_array = function (value, schema) {\n        if (utils.isArrayLike(value))\n            return this.encode_arraylike(value, schema);\n        if (value instanceof ArrayBuffer)\n            return this.encode_buffer(value, schema);\n        throw new Error(\"Expected Array-like not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_arraylike = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.length, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.length, 'u32');\n        }\n        // array values\n        for (var i = 0; i < value.length; i++) {\n            this.encode_value(value[i], schema.array.type);\n        }\n    };\n    BorshSerializer.prototype.encode_buffer = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.byteLength, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.byteLength, 'u32');\n        }\n        // array values\n        this.encoded.store_bytes(new Uint8Array(value));\n    };\n    BorshSerializer.prototype.encode_set = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isSet = value instanceof Set;\n        var values = isSet ? Array.from(value.values()) : Object.values(value);\n        // 4 bytes for length\n        this.encoded.store_value(values.length, 'u32');\n        // set values\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var value_1 = values_1[_i];\n            this.encode_value(value_1, schema.set);\n        }\n    };\n    BorshSerializer.prototype.encode_map = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isMap = value instanceof Map;\n        var keys = isMap ? Array.from(value.keys()) : Object.keys(value);\n        // 4 bytes for length\n        this.encoded.store_value(keys.length, 'u32');\n        // store key/values\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this.encode_value(key, schema.map.key);\n            this.encode_value(isMap ? value.get(key) : value[key], schema.map.value);\n        }\n    };\n    BorshSerializer.prototype.encode_struct = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        for (var _i = 0, _a = Object.keys(schema.struct); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.fieldPath.push(key);\n            this.encode_value(value[key], schema.struct[key]);\n            this.fieldPath.pop();\n        }\n    };\n    return BorshSerializer;\n}());\nexport { BorshSerializer };\n", "import { integers } from './types.js';\nimport { DecodeBuffer } from './buffer.js';\nvar BorshDeserializer = /** @class */ (function () {\n    function BorshDeserializer(bufferArray) {\n        this.buffer = new DecodeBuffer(bufferArray);\n    }\n    BorshDeserializer.prototype.decode = function (schema) {\n        return this.decode_value(schema);\n    };\n    BorshDeserializer.prototype.decode_value = function (schema) {\n        if (typeof schema === 'string') {\n            if (integers.includes(schema))\n                return this.decode_integer(schema);\n            if (schema === 'string')\n                return this.decode_string();\n            if (schema === 'bool')\n                return this.decode_boolean();\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.decode_option(schema);\n            if ('enum' in schema)\n                return this.decode_enum(schema);\n            if ('array' in schema)\n                return this.decode_array(schema);\n            if ('set' in schema)\n                return this.decode_set(schema);\n            if ('map' in schema)\n                return this.decode_map(schema);\n            if ('struct' in schema)\n                return this.decode_struct(schema);\n        }\n        throw new Error(\"Unsupported type: \".concat(schema));\n    };\n    BorshDeserializer.prototype.decode_integer = function (schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            return this.buffer.consume_value(schema);\n        }\n        return this.decode_bigint(size, schema.startsWith('i'));\n    };\n    BorshDeserializer.prototype.decode_bigint = function (size, signed) {\n        if (signed === void 0) { signed = false; }\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(this.buffer.consume_bytes(buffer_len));\n        var bits = buffer.reduceRight(function (r, x) { return r + x.toString(16).padStart(2, '0'); }, '');\n        if (signed && buffer[buffer_len - 1]) {\n            return BigInt.asIntN(size, BigInt(\"0x\".concat(bits)));\n        }\n        return BigInt(\"0x\".concat(bits));\n    };\n    BorshDeserializer.prototype.decode_string = function () {\n        var len = this.decode_integer('u32');\n        var buffer = new Uint8Array(this.buffer.consume_bytes(len));\n        // decode utf-8 string without using TextDecoder\n        // first get all bytes to single byte code points\n        var codePoints = [];\n        for (var i = 0; i < len; ++i) {\n            var byte = buffer[i];\n            if (byte < 0x80) {\n                codePoints.push(byte);\n            }\n            else if (byte < 0xE0) {\n                codePoints.push(((byte & 0x1F) << 6) | (buffer[++i] & 0x3F));\n            }\n            else if (byte < 0xF0) {\n                codePoints.push(((byte & 0x0F) << 12) | ((buffer[++i] & 0x3F) << 6) | (buffer[++i] & 0x3F));\n            }\n            else {\n                var codePoint = ((byte & 0x07) << 18) | ((buffer[++i] & 0x3F) << 12) | ((buffer[++i] & 0x3F) << 6) | (buffer[++i] & 0x3F);\n                codePoints.push(codePoint);\n            }\n        }\n        // then decode code points to utf-8\n        return String.fromCodePoint.apply(String, codePoints);\n    };\n    BorshDeserializer.prototype.decode_boolean = function () {\n        return this.buffer.consume_value('u8') > 0;\n    };\n    BorshDeserializer.prototype.decode_option = function (schema) {\n        var option = this.buffer.consume_value('u8');\n        if (option === 1) {\n            return this.decode_value(schema.option);\n        }\n        if (option !== 0) {\n            throw new Error(\"Invalid option \".concat(option));\n        }\n        return null;\n    };\n    BorshDeserializer.prototype.decode_enum = function (schema) {\n        var _a;\n        var valueIndex = this.buffer.consume_value('u8');\n        if (valueIndex > schema[\"enum\"].length) {\n            throw new Error(\"Enum option \".concat(valueIndex, \" is not available\"));\n        }\n        var struct = schema[\"enum\"][valueIndex].struct;\n        var key = Object.keys(struct)[0];\n        return _a = {}, _a[key] = this.decode_value(struct[key]), _a;\n    };\n    BorshDeserializer.prototype.decode_array = function (schema) {\n        var result = [];\n        var len = schema.array.len ? schema.array.len : this.decode_integer('u32');\n        for (var i = 0; i < len; ++i) {\n            result.push(this.decode_value(schema.array.type));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_set = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Set();\n        for (var i = 0; i < len; ++i) {\n            result.add(this.decode_value(schema.set));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_map = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Map();\n        for (var i = 0; i < len; ++i) {\n            var key = this.decode_value(schema.map.key);\n            var value = this.decode_value(schema.map.value);\n            result.set(key, value);\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_struct = function (schema) {\n        var result = {};\n        for (var key in schema.struct) {\n            result[key] = this.decode_value(schema.struct[key]);\n        }\n        return result;\n    };\n    return BorshDeserializer;\n}());\nexport { BorshDeserializer };\n", "import { BorshSerializer } from './serialize.js';\nimport { BorshDeserializer } from './deserialize.js';\nimport * as utils from './utils.js';\nexport function serialize(schema, value, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var serializer = new BorshSerializer(validate);\n    return serializer.encode(value, schema);\n}\nexport function deserialize(schema, buffer, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var deserializer = new BorshDeserializer(buffer);\n    return deserializer.decode(schema);\n}\n"],
  "mappings": "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",
  "names": ["EncodeBuffer", "DecodeBuffer", "d", "b", "ErrorSchema", "BorshSerializer", "BorshDeserializer"]
}
